<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class CategoryFormRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize(): bool {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules(): array {
        switch ( $this->method() ) {
            case 'PATCH':
                return [
                    'name_ar'          => [
                        'required',
                        Rule::unique( 'category_translations', 'name' )->ignore( $this->id, 'category_id' )->where( function ( $query ) {
                            return $query->where( 'locale', 'ar' );
                        } )
                    ],
                    'name_en'          => [
                        'required',
                        Rule::unique( 'category_translations', 'name' )->ignore( $this->id, 'category_id' )->where( function ( $query ) {
                            return $query->where( 'locale', 'en' );
                        } )
                    ],
                
                ];
                break;
            default:
                return [
                    'name_ar'          => 'required|unique:category_translations,name',
                    'name_en'          => 'required|unique:category_translations,name',
               
                
                ];
        }
    }

    public function messages(): array {
        return parent::messages(); // TODO: Change the autogenerated stub
    }
}
